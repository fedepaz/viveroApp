name: Deploy to Production
# on:
#   push:
#     branches: [main]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      backend: ${{ steps.changes.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'frontend/**'
              - 'package.json'
            backend:
              - 'backend/**'  
              - 'package.json'

  deploy-frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build Next.js
        run: pnpm build --workspace=frontend
        
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

  deploy-backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-success: true

  smoke-tests:
    needs: [deploy-frontend, deploy-backend]
    if: always() && (needs.deploy-frontend.result == 'success' || needs.deploy-backend.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Frontend health check
        if: needs.deploy-frontend.result == 'success'
        run: |
          sleep 30 # Wait for Vercel deployment to propagate
          curl -f https://your-app.vercel.app/api/health || exit 1
        
      - name: Backend health check  
        if: needs.deploy-backend.result == 'success'
        run: |
          sleep 60 # Wait for Render service to restart
          curl -f https://your-backend.onrender.com/health || exit 1
          
      - name: Notify deployment success
        if: success()
        run: |
          echo "Deployment successful!"
          # Add Slack notification here if needed